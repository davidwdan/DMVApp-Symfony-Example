<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Voryx\ThruwayBundle\Details;

/**
 * PersonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonRepository extends EntityRepository
{

    /**
     * @param \Voryx\ThruwayBundle\Details $details
     * @return \AppBundle\Entity\Person
     */
    public function createPersonFromCallDetails(Details $details)
    {
        $em = $this->getEntityManager();

        $person = new Person();
        $person->setSession($details->getDetails()->caller);
        $em->persist($person);

        $em->flush();

        return $person;
    }


    /**
     * @return Person|null
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getNextPerson()
    {
        //Get the id of the first person who has not been served
        $query = $this->getEntityManager()
          ->createQuery('SELECT MIN(p.id) FROM AppBundle:Person p WHERE p.served is null');

        $personId = $query->getSingleResult();

        if (!$personId[1]) {
            return;
        }

        return $this->find($personId[1]);

    }

    /**
     * @return bool
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getCurrentPersonId()
    {

        $em = $this->getEntityManager();

        //Get the id of the last person who has been served
        $query    = $em->createQuery('SELECT MAX(p.id) FROM AppBundle:Person p WHERE p.served = 1');
        $personId = $query->getSingleResult();

        return !isset($personId[1]) && !$personId[1] ? false : $personId[1];

    }

    /**
     * @param \AppBundle\Entity\Person $person
     * @return \AppBundle\Entity\Person
     */
    public function servePerson(Person $person)
    {
        $person->setServed(true);

        $em = $this->getEntityManager();
        $em->persist($person);
        $em->flush();

        return $person;
    }
}
